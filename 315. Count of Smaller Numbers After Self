class Solution {
public:
    vector<int> a;
    void mergethem(vector<pair<int,int>>& nums,int start,int end)
    {
        int i = start,mid = (start+end)/2,j = mid+1,k=0;
        vector<pair<int,int>> ans(end-start+1);
        while(i <= mid && j<= end)
        {
            if(nums[i].first <= nums[j].first)
            {
                ans[k++] = nums[j++];
            }
            else{
                a[nums[i].second] += end-j+1;
                ans[k++] = nums[i++];
            }
        }
        while(i<=mid)
        {
            ans[k++] = nums[i++];
        }
        while(j<=end)
        {
            ans[k++] = nums[j++];
        }
        k=0;
        for(int i=start;i<=end;i++)
            nums[i] = ans[k++];
            
        
    }
    void mergesort(vector<pair<int,int>>& nums,int start,int end)
    {
        if(start >= end)
        {
            return;
        }
        int mid = (start+end)/2;
        mergesort(nums,start,mid);
        mergesort(nums,mid+1,end);
        mergethem(nums,start,end);
        return;
    }
    vector<int> countSmaller(vector<int>& nums) {
        int n = nums.size();
        vector<pair<int,int>> orig(n);
        for(int i=0;i<n;i++)
        {
            orig[i] = {nums[i],i};
        }
        a.resize(n,0);
        mergesort(orig,0,n-1);
        
        return a;
    }
};
