class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL)
        {
            return head;
        }
        ListNode* evenhead = NULL;
        ListNode* oddhead = NULL;
        ListNode* eventail = NULL;
        ListNode* oddtail = NULL;
        ListNode* temp = head;
        int i = 1;
        while(temp!=NULL)
        {
            if(i % 2 == 0)
            {
                if(evenhead == NULL)
                {
                    evenhead = eventail = temp;
                }
                else{
                    eventail->next = temp;
                    eventail = eventail->next;
                }
            }
            else{
                if(oddhead == NULL)
                {
                    oddhead = oddtail = temp;
                }
                else{
                    oddtail->next = temp;
                    oddtail = oddtail->next;
                }
            }
            i++;
            temp = temp->next;
        }
            if(oddtail != NULL)
            {
                oddtail -> next = evenhead;
                if(eventail!=NULL)
                eventail->next = NULL;
                return oddhead;
            }
            else{
                return evenhead;
            }
        
    }
};
